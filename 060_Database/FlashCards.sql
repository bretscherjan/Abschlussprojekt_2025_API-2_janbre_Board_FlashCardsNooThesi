SHOW DATABASES;

DROP DATABASE IF EXISTS FlashCards;
SHOW DATABASES;
CREATE DATABASE FlashCards;
USE FlashCards;

SHOW DATABASES;

CREATE TABLE users (
  id BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  username VARCHAR(55) NOT NULL UNIQUE,
  email VARCHAR(55) NOT NULL UNIQUE,
  password VARCHAR(55) NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE follows (
  follower_id BIGINT NOT NULL,
  followed_id BIGINT NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (follower_id, followed_id),
  FOREIGN KEY (follower_id) REFERENCES users (id) ON DELETE CASCADE,
  FOREIGN KEY (followed_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE decks (
  id BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  title VARCHAR(55) NOT NULL,
  alt VARCHAR(55),
  is_private BOOLEAN NOT NULL DEFAULT TRUE,
  creator_id BIGINT NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (creator_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE collaborators (
  deck_id BIGINT NOT NULL,
  user_id BIGINT NOT NULL,
  can_edit BOOLEAN NOT NULL DEFAULT FALSE,
  PRIMARY KEY (deck_id, user_id),
  FOREIGN KEY (deck_id) REFERENCES decks (id) ON DELETE CASCADE,
  FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE deck_colors (
  deck_id BIGINT PRIMARY KEY,
  start_color VARCHAR(7) NOT NULL,
  end_color VARCHAR(7) NOT NULL,
  FOREIGN KEY (deck_id) REFERENCES decks (id) ON DELETE CASCADE
);

CREATE TABLE cards (
  id BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  deck_id BIGINT NOT NULL,
  question VARCHAR(55) NOT NULL,
  answer VARCHAR(55) NOT NULL,
  is_fav BOOLEAN DEFAULT FALSE,
  status VARCHAR(20) DEFAULT 'needs_practice',
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (deck_id) REFERENCES decks (id) ON DELETE CASCADE
);

CREATE TABLE quiz (
  id BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  deck_id BIGINT NOT NULL,
  question VARCHAR(55) NOT NULL,
  is_fav BOOLEAN DEFAULT FALSE,
  correct_answer SMALLINT NOT NULL CHECK (correct_answer BETWEEN 1 AND 4),
  status VARCHAR(20) DEFAULT 'needs_practice',
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (deck_id) REFERENCES decks (id) ON DELETE CASCADE
);

CREATE TABLE quiz_options (
  quiz_id BIGINT NOT NULL PRIMARY KEY,
  first_option VARCHAR(55) NOT NULL,
  second_option VARCHAR(55) NOT NULL,
  third_option VARCHAR(55) NOT NULL,
  fourth_option VARCHAR(55) NOT NULL,
  FOREIGN KEY (quiz_id) REFERENCES quiz (id) ON DELETE CASCADE
);

SHOW TABLES;